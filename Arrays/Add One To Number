Given a non-negative number represented as an array of digits,add 1 to the number ( increment the number represented by the digits ).
The digits are stored such that the most significant digit is at the head of the list.
Example:
If the vector has [1, 2, 3] the returned vector should be [1, 2, 4] as 123 + 1 = 124.
NOTE: Certain things are intentionally left unclear in this question which you should practice asking the interviewer.
For example, for this problem, following are some good questions to ask :
Q : Can the input have 0’s before the most significant digit. Or in other words, is 0 1 2 3 a valid input?
A : For the purpose of this question, YES
Q : Can the output have 0’s before the most significant digit? Or in other words, is 0 1 2 4 a valid output?
A : For the purpose of this question, NO. Even if the input has zeroes before the most significant digit.

*** Solution ***
vector<int> Solution::plusOne(vector<int> &v) {
    if(v.size() == 1 && v[0] == 0){
        v[0] = 1;
        return v;
    }
    while(v[0] == 0){
        v.erase(v.begin());
    }
    reverse(v.begin(), v.end());
    
    if(v.size() == 1 && v[0] == 9){
        v[0] = 0;
        v.push_back(1);
    } else if(v[0] != 9){
        v[0]++;
    } else {
        v[0] = 0;
        for(int i=1; i<v.size(); i++){
            if(v[i] != 9){
                v[i]++;
                break;
            } else {
                v[i] = 0;
                if(i == v.size()-1){
                    v.push_back(1);
                    break;
                }
            }
        }
    }
    reverse(v.begin(), v.end());
    return v;
}
